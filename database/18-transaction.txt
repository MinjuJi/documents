데이터조작어 트랜잭션 처리
	- 데이터 조작어(DML)
		* 데이터베이스 테이블에 데이터를 추가, 갱신 또는 삭제할 때 사용하는 명령어
		* INSERT, UPDATE, DELETE 명령
	- 트랜잭션
		* 논리적인 작업 단위를 구성하는 데이터 조작 명령문의 모음
		예)
		  * 이체하기
			1. 내 계좌의 잔액 감소 - UPDATE
			2. 상대방 계좌의 잔액 증가 - UPDATE
			3. 내 계좌에 이체 발송 내용 추가 - INSERT
			4. 상대방 계좌에 이체 수신 내용 추가 - INSERT
			* 이체하기는 4번의 DML 작업으로 구성된다. <---- 논리적인 작업단위
		  * 구매하기
			1. 구매 정보 저장 - INSERT
			2. 배송 정보 저장 - INSERT
			3. 결재 정보 저장 - INSERT
			4. 상품 재고 감소 - UPDATE
			5. 상품 판재지수 증가 - UPDATE
			6. 고객의 포인트 증가 - UPDATE
			* 구매하기는 6번의 DML 작업으로 구성된다. <---- 논리적인 작업단위
		- 트랜잭션의 사용 목적
			* 트랜잭션내의 명령문 중 하나라도 실행되지 못하면 나머지 명령문도
                          모두 데이터베이스 반영이 취소되어야 한다.
			* 트랜잭션내의 명령문이 모두 성공적으로 실행되면
                          데이터베이스에 영구적으로 실행결과를 영구적으로 반영시킨다.
			* 데이터의 일관성이 깨지지 않도록 하는 것이 목적이다.

		- 트랜잭션 처리 명령어
			* commit    : 트랜잭션 내의 DML 실행결과를 데이터베이스에 반영한다.
			* rollback  : 트랜잭션 내의 DML 실행결과의 데이터베이스 반영을 전부 취소한다.
		- 트랜잭션의 시작과 종료
			* 트랜잭션의 시작
				첫번째 DML 명령이 실행될때 새 트랜잭션 자동으로 시작된다.
			* 트랜잭션의 종료
				commit 또는 rollback 명령이 실행될 때 기존 트랜잭션이 종료된다.
				* 트랜잭션이 종료되면 새로운 트랜잭션이 자동으로 시작된다.
				SQL 명령어 편집툴을 종료할때 기존 트랜잭션이 종료된다.
				시스템에 장애가 발생할 때 기존 트랜잭션이 종료된다.
		- commit과 rollback의 이해
			* commit/rollback 실행 이전
				- 현재 사용자는 select문을 사용해서 DML작업결과를 검토할 수 있다.
				- 현재 사용자의 DML작업결과를 다른 사용자는 볼 수 없다.
				- 현재 사용자가 작업하는 관련행은 행잠금 때문에 다른 사용자가
                                  관련행의 데이터를 변경할 수 없다.
				- 데이터를 이전상태로 되돌릴 수 있다.
			* commit 실행 후
				- DML 작업 결과가 데이터베이스에 영구적으로 저장된다.
				- 모든 사용자가 작업 결과를 볼 수 있다.
				- 관련행의 행잠금이 해제되어 다른 사용자가 행을 조작할 수 있다.
			* rollback 실행 후
				- DML 작업 결과의 반영이 취소된다.
				- 데이터가 이전상태로 복구된다.
				- 관련행의 행잠금이 해제된다.
	- 트랜잭션의 성질
		(원자성)Atomicity
			트랜잭션과 관련된 작업들은 부분적인 성공을 허용하지 않는다.
		(일관성)Consistency
			트랜잭션이 종료되면 언제나 데이터는 일관성을 유지하는 상태가 된다.
		(고립성)Isolation
			트랜잭션 수행 시 다른 트랜잭션이 끼어들지 못한다.
		(지속성)Durability
			성공적으로 수행된 트랜잭션은 데이터베이스에 영구적으로 반영된다.








		










			