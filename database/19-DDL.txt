데이터 정의어(DDL)
	- 오라클 데이터베이스 객체 생성, 변경, 삭제에 사용되는 명령어
	- CREATE, ALTER, DROP, TRUNCATE
	- 주요 데이터베이스 객체
		* 테이블 : 데이터의 기본 저장단위, 행과 열로 구성되어 있다.
		* 뷰	 : 하나 이상의 테이블을 사용해서 만든 가상의 테이블
		* 시퀀스 : 일련번호 생성기
		* 인덱스 : 검색성능을 향상시키기 위해 데이터에 대한 색인을 가지고 있다.
		* 동의어 : 객체에 대한 다른 이름을 제공한다.

	- 테이블
		* 테이블과 컬럼의 이름규칙
			- 문자로 시작, 30자까지 가능, A-Za-z0-9_$# 만 허용, 
                          오라클 예약어 사용금지
		* 테이블 생성하기
			- CREATE TABLE 테이블명 (
				컬럼명 데이터타입(크기) [DEFAULT 기본값],
				...
			  )
		* 테이블 삭제
			- DROP TABLE 테이블명
		* 테이블 변경
			- 컬럼추가
				ALTER TABLE 테이블명 ADD (컬럼명 데이터타입(크기) [DEFAULT 기본값]);	
			- 컬럼수정
				ALTER TABLE 테이블명 MODIFY (컬럼명 테이터타입(크기) [DEFAULT 기본값]);
			- 컬럼삭제
				ALTER TABLE 테이블명 DROP 컬럼명;
		* 테이블 이름 변경
			RENAME 테이블명 TO 새테이블명
		* 테이블 절단하기
			TRUNCATE TABLE 테이블명
			* truncate는 테이블에서 모든 행을 제거한다.
			* 해당 테이블이 사용하는 저장공간을 해제한다.
			* truncate로 제거된 행은 rollback할 수 없다.

	- 시퀀스
		- 일련번호를 자동으로 생성하는 데이터베이스 객체다.
		- 기본키 값(행을 대표하는 값)을 생성하는데 주로 사용됩니다.
		- 시퀀스 생성
			CREATE SEQUENCE 시퀀스명;	
				1부터 1씩 증가하는 번호가 발행된다.
			CREATE SEQUENCE 시퀀스명
				[INCREMENT BY a]		a씩 증가한다.
				[START WITH   b]		b부터 시작한다.
				[{MAXVALUE c | NOMAXVALUE}]	c가 최대값이다.
				[{MINVALUE d | NOMINVALUE}]	d가 최소값이다.
				[{CYCLE | NOCYCLE}]		최대값/최소값이 도달했을 때 반복여부를 결정한다.
				[{CACHE e | NOCACHE}]		일련번호를 e개 만큼 미리 할당해서 메모리에 캐시하거나,
                                                                캐시를 활용하지 않는다.
				* 기본값
				CREATE SEQUENCE 시퀀스명
					INCREMENT BY 1		
					START WITH   1	
					NOMAXVALUE
					NOMINVALUE
					NOCYCLE		
					CACHE 20;	
		- 시퀀스의 삭제
			DROP SEQUENCE 시퀀스명
		- 시퀀스의 수정
			ALTER SEQUENCE 시퀀스명
				[INCREMENT BY a]		
				[{MAXVALUE c | NOMAXVALUE}]	
				[{MINVALUE d | NOMINVALUE}]	
				[{CYCLE | NOCYCLE}]		
				[{CACHE e | NOCACHE}]		
			* START WITH를 제외한 나머지 설정을 변경할 수 있다.
		- 시퀀스의 사용
			* 시퀀스명.NEXTVAL
				- 새로운 일련번호를 반환한다.
			* 시퀀스명.CURRVAL
				- 현재 시퀀스의 일련번호를 반환한다.
				- CURRVAL을 사용하려면 해당 시퀀스에 대한 
				  NEXTVAL이 실행된 후에만 가능한다.
	
	- 뷰
		- 테이블 혹은 다른 뷰를 기반으로 하는 가상의 테이블(논리적인 테이블)이다.
		- 특징
			- 물리적인 저장공간을 가지지 않는다.
			- INSERT, UPDATE, DETELE 작업의 수행이 불편하다.
		- 목적
			- 복잡한 SQL문을 간단하게 작성하기 위해서 사용
			- 데이터의 엑세스를 제한하기 위해서 사용(데이터에 대한 보안성 강화)
			- 동일한 데이터로부터 다양한 결과를 얻기 위해서 사용
		- 종류
			- 단순 뷰
				- 한 테이블에서만 데이터를 가져온다.
				- 함수 또는 데이터 그룹을 사용하지 않았음
				- DML(INSERT/UPDATE/DELETE가 가능은 하다)
			- 복합 뷰
				- 여러 테이블에 데이터를 가져온다.
				- 함수 또는 데이터 그룹을 포함하고 있음
				- DML 거의 불가능하다.
		- 뷰 생성
			CREATE [OR REPLACE] VIEW 뷰이름
			AS 서브쿼리
			WITH READ ONLY
			* 서브쿼리는 가상의 테이블이 포함할 데이터를 조회하는 SELECT문
		- 뷰 수정
			CREATE OR REPLACE VIEW 뷰이름
			AS 서브쿼리
			* 뷰이름을 수정하려는 기존 뷰이름과 동일하게 지정하면 된다.
		- 뷰 삭제
			DROP VIEW 뷰이름
	- 인라인 뷰
		- SELECT 문의 FROM절에 서브쿼리를 정의하고, 
		  이 서브쿼리로 조회된 결과를 가상의 테이블로 취급하고, 별칭을 부여한 것
		- 데이터베이스 객체가 아니다.
		- 형식
			SELECT A.column, A.column, A.column
			FROM (SELECT column, column, column, ...
                              FROM table1
			      WHERE 조건식) A
			WHERE 조건식
			
	
		
			

		
		








		







					
				
		
		











			


	
