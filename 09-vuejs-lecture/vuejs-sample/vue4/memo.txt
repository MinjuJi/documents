Vue.js의 특징
    - Vue.js는 간단하고 배우기 쉽다.
    - 쉬운 API로 구성되어 있어서 애플리케이션의 로직 구현에 집중할 수 있다.
    - 점진적인 프레임워크다.(작은 규모에서 시작해서 점차 대규모로 성장시켜가는 웹 애플리케이션을 작성하기위한 직관적인 방법을 제공한다.)

Vue의 구성요소
    - Vue 인스턴스
        * Vue.js는 Vue 인스턴스를 생성하는 것으로 모든 애플리케이션을 시작한다.
        * Vue 애플리케이션은 루트 Vue 인스턴스와 컴포넌트 Vue 인스턴스라는 두가지 유형의 Vue 인스턴스로 구성된다.
        * 루트 Vue 인스턴스 생성하기
            new Vue({options});
            # options 객체에 애플리케이션을 기술하고, Vue.js가 이 객체를 가지고 Vue 인스턴스를 초기화한다.
        * Option 객체의 주요 프로퍼티
            # el
                - Vue.js 애플리케이션을 적용할 엘리먼트를 지정한다
                - el로 지정된 태그 내부에서만 Vue 애플리케이션이 실행된다.
                - CSS 선택자를 이용해서 Vue.js 애플리케이션이 적용될 엘리먼트를 지정할 수 있다.
            # data
                - 데이터모델 객체를 정의한다.
                - 데이터모델 객체에 정의된 값은 이중괄호 표현식이나 v-model 지시어를 사용해서 화면에 표시할 수 있다.
                - 데이터모델의 값이 변경되면 즉시 화면의 내용도 자동으로 갱신된다.
                - 데이터모델의 값은 양방향 데이터바인딩을 사용해서 내용을 변경할 수도 있다.
            # methods
                - 메소드를 담는 객체를 정의한다.
                - 이 객체에 정의된 메소드는 사용자와 상호작용하는 이벤트 처리에 활용된다.
                - 연결된 이벤트가 발생할 때 마다 해당 메소드는 실행된다.
            # computed
                - 계산된 결과를 반환하는 메소드를 담는 객체를 정의한다.
                - computed 속성에 저장된 메소드는 종속 대상을 따라 계산 결과를 캐싱한다.
                - computed 속성은 해당 속성이 종속된 대상이 변경될 때만 함수를 실행한다. 종속된 대상이 변경되지 않는 한 여러 번 요청해도 계산을 다시 하지 않고 계산되어 있던 결과를 즉시 반환한다.


                