계층검색
	- 계층형 쿼리를 이용해서 트리 구조의 형태로 결과를 조회할 수 있다.
	- 일반적으로 조직도나 카테고리, 메뉴등의 정보는 트리구조를 가지고 있다.
          * 특정 데이터의 하위 데이터들 조회하기
	  * 특정 데이터의 상위 데이터들 조회하기
	- 구조
		SELECT [LEVEL], column, column, ...
		FROM table
		[WHERE 조건식]
		START WITH 조건식
		CONNECT BY PRIOR 조건식
		* LEVEL : 반환되는 각 행에 대해서 
                          최상위행은 1, 그 자식행은 2, 그 자식의 자식행은 3과 같은 방식의 값을 반환
		* START WITH : 계층 검색의 시작지점을 지정한다.	
		* CONNECT BY : 부모행과 자식행 간의 관계가 있는 컬럼을 지정한다.

	- 작성예
		- 상위에서 하위로 검색하기
			SELECT level, employee_id, first_name
			FROM employees
			START WITH employee_id = 100	-- 100번 직원이 시작지점이다.
			CONNECT BY PRIOR employee_id = manager_id;
		* 방향 : 상위 -> 하위
			connect by prior 부모키(기본키) = 자식키(외래키)		


		- 하위에서 상위로 검색하기
			SELECT level, employee_id, first_name
			FROM employees
			START WITH employee_id = 100	-- 100번 직원이 시작지점이다.
			CONNECT BY PRIOR manager_id = employee_id;
		* 방향 : 하위 -> 하위
			connect by prior 자식키(외래키) = 부모키(기본키)

	- level과 connect by를 사용해서 연속된 숫자, 날짜를 만들기
		-- 01~12까지 숫자 출력하기
			select lpad(level, 2, '0') month
			from dual 
			connect by level <= 12;

		-- 2004년에 월별 입사자 수 조회하기
			select to_char(hire_date, 'mm'), count(*)
			from employees 
			where to_char(hire_date, 'yyyy') = '2004'
			group by to_char(hire_date, 'mm')
			order by 1;
			* 실제 입사자가 있는 월만 조회되고, 입사자가 없는 월은 조회되지 않음



		-- 2004년에 월별 입사자 수 조회
			select A.month, nvl(B.cnt, 0) cnt
			from (select lpad(level, 2, '0') month 
     			 	from dual
      				connect by level <= 12) A, 
     			     (select to_char(hire_date, 'mm') month, count(*) cnt
      				from employees 
      				where to_char(hire_date, 'yyyy') = '2004'
      				group by to_char(hire_date, 'mm')) B
			where A.month = B.month(+)
			order by 1;
			* 입사자가 없는 월도 결과에 포함됨

		-- 특정 기간 사이의 날짜 생성하기
			select to_date('시작일자', 'yyyymmdd') + level - 1
			from dual
			connect by level <= to_date('종료일', 'yyyymmdd') - to_date('시작일', 'yyyymmdd') + 1;
			* 년도별, 월별, 일자별 값을 구할 때 위의 조회결과와 포괄조인 시키면
                          누락되는 년,월,일 없이 조회가 가능하다.

			* 2019/08/26 ~ 2019/10/28 사이의 날짜를 생성하기
				select to_date('2019/08/26', 'yyyy/mm/dd') + level - 1
				from dual 
				connect by level <= to_date('2019/10/28') - to_date('2019/08/26') + 1;
			
		

	