spring과 데이터처리 프레임워크와의 연동
	* 스프링과 연동가능한 데이터처리 프레임워크
		- ibatis, mybatis, JPA, hibernate
	* 스프링 데이터 처리의 필수 절차
		1. DataSource 객체를 스프링의 빈으로 등록하기
			* DataSource 인터페이스의 구현체는 데이터베이스와 연결된 Connection을
                          제공한다.
			* DataSource 구현체 등록하기
				- DriverManagerDataSource 
					* 개발단계에서만 사용가능한 DataSource 구현체
					<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
						<property name="driverClassName" value="${driver}" />
						<property name="url" value="${dburl}" />
						<property name="username" value="${username}" />
						<property name="password" value="${password}" />
					</bean>
				- BasicDataSource
					* apache commons-dbcp.jar 라이브러리 이용
					* 스프링을 이용한 자바 응용프로그램에서 주로 사용
					<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource“ destroy-method="close“>
						<property name="driverClassName" value="${driver}" />
						<property name="url" value="${dburl}" />
						<property name="username" value="${username}" />
						<property name="password" value="${password}" />
					</bean>
				- JNDI를 이용한 DataSource 획득
					* 웹서버가 제공하는 DataSource 구현체 이용한다
					* 스프링을 이용한 웹 애플리케이션에서 주로 사용
					<jee:jndi-lookup id="dataSource" jndi-name="${jndiName}"resource-ref="true"/>
		2. mybatis와 스프링 연동하기
			* SqlSessionFactory를 스프링의 빈으로 등록하기
				<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
					<property name="dataSource" ref="dataSource"></property>
					<property name="mapperLocations" value="classpath:/META-INF/mybatis/mappers/*.xml"></property>
				</bean>
			* 매퍼 인터페이스를 스캔해서 매퍼 인터페이스 구현객체를 생성하고 스프링 빈으로 자동 등록하기
				<mybatis-spring:scan base-package="매퍼인터페이스 패키지명" 
						 factory-ref="sqlSessionFactory"/>
