메소드 중복정의
	- 하나의 클래스에 안에 동일한 이름의 메소드를 여러 개 정의하는 것
	- 접근제한자, 반환타입의 상관없다.
	- 메소드이름이 동일하고, 매개변수의 타입, 갯수가 다르기만 하면 된다.
	- 목적
		- 하나의 클래스안에 매개변수만 다르고 수행하는 작업은 
		  비슷한 경우 일관성있고 동일한 메소드 이름으로 실행하게 한다.

메소드 재정의
	- 상속/구현관계에 있는 클래스의 자식 클래스에서 부모로부터 물려받은
	  메소드를 재정의하는 것이다.
	- 방법
		- 반환타입, 메소드이름, 매개변수의 갯수와 타입이 모두 일치하고,
		  구현내용(수행문의 내용)만 재정의하는 것
		- 접근제한자는 부모측의 접근제한자와 동일하거나 더 느슨하게 
		  정의해야 한다.
	- 내용
		- 동일한 업무지만 자식클래스들 마다 세부 업무내용이 다른 경우
		  구체적인 구현을 자식클래스들이 부모의 메소드를 재정의해서
		  구현하도록 하는 것이다.
	- 목적
		- 부모의 메소드와 자식의 메소드가 메소드 재정의 관계를 형성하게
		  되면 부모객체를 참조하고 있어도 자식에 재정의된 메소드를
		  실행할 수 있게 할 수 있다.
		  * 필드의 다형성, 매개변수의 다형성을 획득할 수 있다.

다형성
	- 실행방법은 동일하지만 사용하는 객체가 달라지면 
          다른 결과가 발현되는 것
	- 객체지향 프로그래밍의 주요한 특징이다
	- 메소드 재정의, 추상화, 인터페이스 등의 기술을 활용해서 다양하게
	  활용할 수 있다.